--- a/lldb/packages/Python/lldbsuite/test/dotest.py
+++ b/lldb/packages/Python/lldbsuite/test/dotest.py
@@ -1917,8 +1917,8 @@
                 def addSuccess(self, test):
                     global parsable
                     super(LLDBTestResult, self).addSuccess(test)
-                    if parsable:
-                        self.stream.write("PASS: LLDB (%s) :: %s\n" % (self._config_string(test), str(test)))
+                    #if parsable:
+                    #    self.stream.write("PASS: LLDB (%s) :: %s\n" % (self._config_string(test), str(test)))
                     if self.results_formatter:
                         self.results_formatter.handle_event(
                             EventBuilder.event_for_success(test))
@@ -1983,8 +1983,8 @@
                     method = getattr(test, "markExpectedFailure", None)
                     if method:
                         method(err, bugnumber)
-                    if parsable:
-                        self.stream.write("XFAIL: LLDB (%s) :: %s\n" % (self._config_string(test), str(test)))
+                    #if parsable:
+                    #    self.stream.write("XFAIL: LLDB (%s) :: %s\n" % (self._config_string(test), str(test)))
                     if self.results_formatter:
                         self.results_formatter.handle_event(
                             EventBuilder.event_for_expected_failure(
@@ -1998,8 +1998,8 @@
                     method = getattr(test, "markSkippedTest", None)
                     if method:
                         method()
-                    if parsable:
-                        self.stream.write("UNSUPPORTED: LLDB (%s) :: %s (%s) \n" % (self._config_string(test), str(test), reason))
+                    #if parsable:
+                    #    self.stream.write("UNSUPPORTED: LLDB (%s) :: %s (%s) \n" % (self._config_string(test), str(test), reason))
                     if self.results_formatter:
                         self.results_formatter.handle_event(
                             EventBuilder.event_for_skip(test, reason))
--- a/lldb/third_party/Python/module/unittest2/unittest2/runner.py
+++ b/lldb/third_party/Python/module/unittest2/unittest2/runner.py
@@ -171,9 +171,9 @@
         if hasattr(result, 'separator2'):
             self.stream.writeln(result.separator2)
         run = result.testsRun
-        self.stream.writeln("Ran %d test%s in %.3fs" %
-                            (run, run != 1 and "s" or "", timeTaken))
-        self.stream.writeln()
+        #self.stream.writeln("Ran %d test%s in %.3fs" %
+        #                    (run, run != 1 and "s" or "", timeTaken))
+        #self.stream.writeln()
         
         expectedFails = unexpectedSuccesses = skipped = passed = failed = errored = 0
         try:
